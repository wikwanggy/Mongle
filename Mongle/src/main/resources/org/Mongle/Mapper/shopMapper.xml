<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.Mongle.Mapper.shopMapper">
	<!-- 상품 등록 -->
	<!-- 제목, 내용을 writing테이블 insert -->
	<insert id="write">
		<!-- order:"대문자만사용" -->
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			<!-- select 값을 keyProperty="bno"에 추가BEFORE로 먼저 -->
			select ifnull(MAX(bno)+1,1)from
			writing
		</selectKey>
		insert ignore into writing(bno, w_name, w_price,w_Quantity)
		values(#{bno}, #{w_name}, #{w_price},#{w_Quantity})
	</insert>

	<!-- 상품분류 -->
	<select id="c_type1"
		resultType="org.Mongle.model.shopCategoryVO">
		select distinct(c_type1) from Category
	</select>

	<select id="c_type2"
		resultType="org.Mongle.model.shopCategoryVO">
		select c_type2 from Category
		where c_type1=#{c_type1}
	</select>

	<!-- 상품 목록 리스트,번호 -->
	<select id="shop" resultType="org.Mongle.model.shopVO">
		select
		rownum,j.bno,w_name,w_price,w_regdata,w_quantity,vision,Concat(Replace(p_upload,
		'\\','/'),<![CDATA['/']]>
		, p_uid , '_' ,p_name)AS filem from(select @rownum:=@rownum+1 rownum,
		w.* from writing w,
		(select @rownum:=0) as tmp
		<if test="keyword != null">
			<choose>
				<when test="type == 'T'.toString()">
					where w_name like concat('%',#{keyword},'%') </when>
				<when test="type == 'C'.toString()">
					where j.bno like concat('%',#{keyword},'%') </when>
				<otherwise>
					where w_name like concat('%',#{keyword},'%') or w_type
					like
					concat('%',#{keyword},'%')
				</otherwise>
			</choose>
		</if>
		)as j join product p on j.bno = p.bno
		<![CDATA[
		where rownum > (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount} and vision = "m"
		]]>
		order by j.bno desc
	</select>

	<!-- 상품 상세내용 -->
	<select id="main" resultType="org.Mongle.model.shopVO">
		select
		w.bno,w_name,w_price,w_regdata,w_quantity,
		Concat(Replace(p_upload, '\\','/'),<![CDATA['/']]>,p_uid,'_'
		,p_name)AS filem
		from writing w join product p on w.bno = p.bno where
		w.bno = #{bno} and
		vision = 'm';
	</select>

	<select id="sub" resultType="org.Mongle.model.shopVO">
		select
		w.bno,w_name,w_price,w_regdata,w_quantity,
		Concat(Replace(p_upload, '\\','/'),<![CDATA['/']]>,p_uid,'_'
		,p_name)AS filem
		from writing w join product p
		on w.bno = p.bno where
		w.bno = #{bno} and
		vision = 's' ;
	</select>

	<select id="total" resultType="int">
		select count(*) from writing w join product p on w.bno = p.bno where
		vision = "m"
		<if test="keyword != null">
			<choose>
				<when test="type == 'T'.toString()"> and w_name like concat('%',#{keyword},'%') </when>
				<when test="type == 'C'.toString()"> and j.bno like concat('%',#{keyword},'%') </when>
			</choose>
		</if>
	</select>

	<!-- 문의 등록 -->
	<insert id="s_write">
		<!-- order:"대문자만사용" -->
		<!-- <selectKey keyProperty="rno" order="BEFORE" resultType="int">
			select 값을 keyProperty="bno"에 추가BEFORE로 먼저
			select max(rno)+1 rno
			from shop_item
		</selectKey> -->

		insert into shop_item(rno, s_id, s_title, s_question)
		values(#{rno},#{s_id},#{s_title},#{s_question})
	</insert>
	
	<!-- 문의 리스트  -->
	<select id="s_item" resultType="org.Mongle.model.shopitemVO">
	 select * from shop_item;
	</select>

	<!-- 상품 수정 -->
	<!-- <update id="modify"> update writing set w_name=#{w_name}, w_price=#{w_price}, 
		w_color=#{w_color}, w_type=#{w_type}, w_Quantity=#{w_Quantity} where bno=#{bno} 
		</update> -->

	<!-- 상품 삭제 -->
	<!-- <delete id="remove"> delete from writing where bno=#{bno} </delete> -->
</mapper>